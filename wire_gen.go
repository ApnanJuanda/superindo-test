// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/ApnanJuanda/superindo/app"
	"github.com/ApnanJuanda/superindo/config"
	"github.com/ApnanJuanda/superindo/controller"
	"github.com/ApnanJuanda/superindo/repository"
	"github.com/ApnanJuanda/superindo/service"
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializedServer() *app.Initialization {
	db := config.NewDB()
	client := config.NewRedisDB()
	productRepositoryImpl := repository.NewProductRepositoryImpl(db, client)
	v := ProvideValidatorOptions()
	validate := validator.New(v...)
	productServiceImpl := service.NewProductServiceImpl(productRepositoryImpl, validate)
	productControllerImpl := controller.NewProductControllerImpl(productServiceImpl)
	initialization := app.NewInitialization(productRepositoryImpl, productServiceImpl, productControllerImpl)
	return initialization
}

// injector.go:

func ProvideValidatorOptions() []validator.Option {
	return []validator.Option{}
}

var productSet = wire.NewSet(repository.NewProductRepositoryImpl, wire.Bind(new(repository.ProductRepository), new(*repository.ProductRepositoryImpl)), service.NewProductServiceImpl, wire.Bind(new(service.ProductService), new(*service.ProductServiceImpl)), controller.NewProductControllerImpl, wire.Bind(new(controller.ProductController), new(*controller.ProductControllerImpl)))
